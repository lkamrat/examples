version: 2
jobs:
  build:
    docker:
      - image: microsoft/dotnet:2.2-sdk
    steps:
      - checkout
      - run:
          name: build
          command: dotnet build docker/github-circleci-kubernetes/HelloWorld.sln

      # - run:
      #     name: Print Runtime Info
      #     command: |
      #       docker --version
      # - checkout  
      - checkout
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - checkout  
      - run:
          name: docker-image
          command: |
            # TAG=latest
            # IMAGE=application_name
            docker build -t $IMAGE:$TAG .
            docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
            docker tag $IMAGE:$TAG $DOCKER_REGISTRY/$IMAGE:$TAG
     


  # push-to-docker-hub:
  #     docker:
  #       - image: docker:latest
  #     steps:
  #       - checkout
  #       - setup_remote_docker
  #       - run:
  #           name: Install dependencies
  #           command: |
  #             apk add --update --no-cache curl jq python py-pip
  #       - run:
  #           name: Build Docker Image
  #           command: |
  #             docker build -t api .
  #             docker tag api <yourRepo>/<imageName>:latest
  #             docker tag api <yourRepo>/<imageName>:$CIRCLE_SHA1
  #             docker login -u $DOCKER_USER -p $DOCKER_PASS
  #             docker push <yourRepo>/<imageName>:latest
  #             docker push <yourRepo>/<imageName>:$CIRCLE_SHA1
  #       - persist_to_workspace:
  #           root: ./
  #           paths:
  #             - k8s-*.yml            